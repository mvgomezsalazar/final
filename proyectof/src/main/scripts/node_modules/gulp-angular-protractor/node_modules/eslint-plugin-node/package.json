{
  "_args": [
    [
      {
        "raw": "eslint-plugin-node@https://registry.npmjs.org/eslint-plugin-node/-/eslint-plugin-node-2.0.0.tgz",
        "scope": null,
        "escapedName": "eslint-plugin-node",
        "name": "eslint-plugin-node",
        "rawSpec": "https://registry.npmjs.org/eslint-plugin-node/-/eslint-plugin-node-2.0.0.tgz",
        "spec": "https://registry.npmjs.org/eslint-plugin-node/-/eslint-plugin-node-2.0.0.tgz",
        "type": "remote"
      },
      "c:\\FinalCurso\\final\\proyectof\\src\\main\\scripts\\node_modules\\gulp-angular-protractor"
    ]
  ],
  "_from": "eslint-plugin-node@https://registry.npmjs.org/eslint-plugin-node/-/eslint-plugin-node-2.0.0.tgz",
  "_id": "eslint-plugin-node@2.0.0",
  "_inCache": true,
  "_location": "/gulp-angular-protractor/eslint-plugin-node",
  "_phantomChildren": {},
  "_requested": {
    "raw": "eslint-plugin-node@https://registry.npmjs.org/eslint-plugin-node/-/eslint-plugin-node-2.0.0.tgz",
    "scope": null,
    "escapedName": "eslint-plugin-node",
    "name": "eslint-plugin-node",
    "rawSpec": "https://registry.npmjs.org/eslint-plugin-node/-/eslint-plugin-node-2.0.0.tgz",
    "spec": "https://registry.npmjs.org/eslint-plugin-node/-/eslint-plugin-node-2.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [],
  "_resolved": "https://registry.npmjs.org/eslint-plugin-node/-/eslint-plugin-node-2.0.0.tgz",
  "_shasum": "d49dc427cedc0df436238cdcb06acd961fa38de5",
  "_shrinkwrap": null,
  "_spec": "eslint-plugin-node@https://registry.npmjs.org/eslint-plugin-node/-/eslint-plugin-node-2.0.0.tgz",
  "_where": "c:\\FinalCurso\\final\\proyectof\\src\\main\\scripts\\node_modules\\gulp-angular-protractor",
  "author": {
    "name": "Toru Nagashima"
  },
  "bugs": {
    "url": "https://github.com/mysticatea/eslint-plugin-node/issues"
  },
  "dependencies": {
    "ignore": "^3.0.11",
    "minimatch": "^3.0.2",
    "object-assign": "^4.0.1",
    "resolve": "^1.1.7",
    "semver": "5.2.0"
  },
  "description": "Additional ESLint's rules for Node.js",
  "devDependencies": {
    "coveralls": "^2.11.4",
    "eslint": "^3.0.0",
    "eslint-config-mysticatea": "^5.0.0",
    "if-node-version": "^0.1.0",
    "istanbul": "^0.4.0",
    "mocha": "^2.3.4",
    "npm-run-all": "^2.0.0",
    "rimraf": "^2.4.4",
    "shelljs": "^0.7.0"
  },
  "engines": {
    "node": ">=0.10"
  },
  "files": [
    "conf",
    "lib",
    "index.js"
  ],
  "homepage": "https://github.com/mysticatea/eslint-plugin-node#readme",
  "keywords": [
    "eslint",
    "eslintplugin",
    "eslint-plugin",
    "node",
    "nodejs",
    "ecmascript",
    "shebang",
    "file",
    "path",
    "import",
    "require"
  ],
  "license": "MIT",
  "name": "eslint-plugin-node",
  "optionalDependencies": {},
  "peerDependencies": {
    "eslint": ">=2.0.0"
  },
  "readme": "# eslint-plugin-node\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-node.svg)](https://www.npmjs.com/package/eslint-plugin-node)\n[![Downloads/month](https://img.shields.io/npm/dm/eslint-plugin-node.svg)](http://www.npmtrends.com/eslint-plugin-node)\n[![Build Status](https://travis-ci.org/mysticatea/eslint-plugin-node.svg?branch=master)](https://travis-ci.org/mysticatea/eslint-plugin-node)\n[![Coverage Status](https://coveralls.io/repos/mysticatea/eslint-plugin-node/badge.svg?branch=master)](https://coveralls.io/r/mysticatea/eslint-plugin-node?branch=master)\n[![Dependency Status](https://david-dm.org/mysticatea/eslint-plugin-node.svg)](https://david-dm.org/mysticatea/eslint-plugin-node)\n\nAdditional ESLint's rules for Node.js\n\n## Install & Usage\n\n```\n> npm install --save-dev eslint eslint-plugin-node\n```\n\n- Requires Node.js `^0.10.0 || ^0.12.0 || ^4.0.0 || >=6.0.0`\n- Requires ESLint `>=2.0.0`\n\n**.eslintrc**\n\n```json\n{\n    \"plugins\": [\"node\"],\n    \"extends\": [\"eslint:recommended\", \"plugin:node/recommended\"]\n}\n```\n\n## Configs\n\nThis plugin provides `plugin:node/recommended` preset config.\nThis preset config:\n\n- enables the environment of ES2015 (ES6) and Node.js.\n- enables rules which are given :star: in the following table.\n\n**Note:** It recommends a use of [the \"engines\" field of package.json](https://docs.npmjs.com/files/package.json#engines). The \"engines\" field is used by [no-unsupported-features](docs/rules/no-unsupported-features.md) rule.\n\n## Rules\n\n|        |          | Rule ID                                                          | Description |\n|:------:|:--------:|:-----------------------------------------------------------------|:------------|\n| :star: |          | [no-deprecated-api](docs/rules/no-deprecated-api.md)             | Disallow deprecated API.\n|        |          | [no-missing-import](docs/rules/no-missing-import.md)             | Disallow `import` and `export` declarations for files that don't exist.\n| :star: |          | [no-missing-require](docs/rules/no-missing-require.md)           | Disallow `require()`s for files that don't exist.\n|        |          | [no-unpublished-import](docs/rules/no-unpublished-import.md)     | Disallow `import` and `export` declarations for files that are not published.\n| :star: |          | [no-unpublished-require](docs/rules/no-unpublished-require.md)   | Disallow `require()`s for files that are not published.\n| :star: |          | [no-unsupported-features](docs/rules/no-unsupported-features.md) | Disallow unsupported ECMAScript features on the specified version.\n|        |          | [process-exit-as-throw](docs/rules/process-exit-as-throw.md)     | Make the same code path as throw at `process.exit()`. (âš  Experimental)\n| :star: | :pencil: | [shebang](docs/rules/shebang.md)                                 | Suggest correct usage of shebang.\n\n- :star: - the mark of a recommended rule.\n- :pencil: - the mark of a fixable rule.\n\n## Semantic Versioning Policy\n\n`eslint-plugin-node` follows [semantic versioning](http://semver.org/) and [ESLint's Semantic Versioning Policy](https://github.com/eslint/eslint#semantic-versioning-policy).\n\n- Patch release (intended to not break your lint build)\n    - A bug fix in a rule that results in `eslint-plugin-node` reporting fewer errors.\n    - Improvements to documentation.\n    - Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.\n    - Re-releasing after a failed release (i.e., publishing a release that doesn't work for anyone).\n- Minor release (might break your lint build)\n    - A bug fix in a rule that results in `eslint-plugin-node` reporting more errors.\n    - A new rule is created.\n    - A new option to an existing rule is created.\n    - An existing rule is deprecated.\n- Major release (likely to break your lint build)\n    - A support for old Node version is dropped.\n    - A support for old ESLint version is dropped.\n    - An existing rule is removed.\n    - An existing option of a rule is removed.\n    - An existing config is updated.\n\n## FAQ\n\nQ: The `no-missing-import` / `no-missing-require` rules don't work with nested folders in SublimeLinter-eslint\n\nA: See [context.getFilename() in rule returns relative path](https://github.com/roadhump/SublimeLinter-eslint#contextgetfilename-in-rule-returns-relative-path) in the SublimeLinter-eslint FAQ.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mysticatea/eslint-plugin-node.git"
  },
  "scripts": {
    "build": "node scripts/generate-index.js",
    "clean": "rimraf coverage",
    "coveralls": "cat coverage/lcov.info | coveralls",
    "postversion": "git push && git push --tags",
    "preversion": "run-s -sn clean build test:*",
    "test": "run-s -sn clean build test:*",
    "test:lint": "if-node-version \">=4\" eslint lib tests/lib index.js",
    "test:mocha": "istanbul cover node_modules/mocha/bin/_mocha -- tests/lib/**/*.js --reporter progress"
  },
  "version": "2.0.0"
}
